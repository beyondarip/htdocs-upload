set-option -g prefix C-a
unbind C-b
unbind l
unbind c
unbind %
unbind n
unbind p
unbind '"'
unbind "'"
bind C-a send-prefix

set-option -g default-terminal "screen-256color"

setw -g mode-keys vi
set-window-option -g mode-keys vi

# resize panes more easily
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# Use v to trigger selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X rectangle-toggle
# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel pbcopy

bind -r ^ last-window
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# change pane switching without prefix
bind -n C-S-Left  select-pane -L # bind -n M-S-Up   resize-pane -U 2
bind -n C-S-Right select-pane -R # bind -n M-S-Down resize-pane -D 4
bind -n C-S-Up    select-pane -U # bind -n M-S-Up   resize-pane -U 2
bind -n C-S-Down  select-pane -D # bind -n M-S-Down resize-pane -D 4

bind -n C-M-h select-pane -L # bind -n M-S-Up   resize-pane -U 2
bind -n C-M-l select-pane -R # bind -n M-S-Down resize-pane -D 4
bind -n C-M-j select-pane -U # bind -n M-S-Up   resize-pane -U 2
bind -n C-M-k select-pane -D # bind -n M-S-Down resize-pane -D 4

# reaload config
bind r source-file ~/.config/tmux/tmux.conf \; display-message " Config successfully reloaded!"

# switching window
# bind -n M-Left previous-window
# bind -n M-Right next-window
bind -n M-";" prev
bind -n M-"'" next
bind -n M-left switch-client -n
bind -n M-right switch-client -p
# bind -n M-";" switch-client -n # bind -n M-S-Up   resize-pane -U 2
# bind -n M-"'" switch-client -p # bind -n M-S-Down resize-pane -D 4
#bind -r j switch-client -n
#bind -r k switch-client -p

# spliting window keys
bind-key "'"   split-window -c '#{pane_current_path}' -h # bind v split-window -h
bind-key '"'   split-window -c '#{pane_current_path}' -v # bind h split-window -v

# new tab
bind -n C-t    new-window -c '#{pane_current_path}' -a
bind c         new-window -c '#{pane_current_path}' -a -d
bind -n C-S-T  new-window -c '~'

# resize pane
# bind -n C-S-M-Left  resize-pane -L 2 # bind -n M-S-Up resize-pane -U 2
# bind -n C-S-M-Right resize-pane -R 2 # bind -n M-S-Down resize-pane -D 4
# bind -n C-S-M-Up    resize-pane -U 2 # bind -n M-S-Up resize-pane -U 2
# bind -n C-S-M-Down  resize-pane -D 2 # bind -n M-S-Down resize-pane -D 4

# config regular
set -g base-index 1

#-------- Mouse {{{
#------------------------------------------------------
# mouse to highlight and copy; to paste use "prefix + ]"
# http://awhan.wordpress.com/2012/04/18/tmux-copy-paste-with-mouse/

# temporarily allow regular terminal copy mode while mouse mode is enable
# visual line:  shift+mouse
# visual block: ctrl+shift+mouse <-- only works on some terminals
# visual block: ctrl+mouse <-- (while mouse mode is disable) only works on some terminals

# toggle mouse mode (tmux 2.1 or higher)
# https://www.reddit.com/r/tmux/comments/3paqoi/tmux_21_has_been_released/cw552qd
bind-key m set-option -g -q mouse on \; display-message 'Mouse: ON'
bind-key M set-option -g -q mouse off \; display-message 'Mouse: OFF'
setw -g mouse on

# bind-key m \
#   set-option -g -q mouse on \;\
#   display-message 'Mouse: ON'
#
# bind-key M \
#   set-option -g -q mouse off \;\
#   display-message 'Mouse: OFF'

# toggle mouse mode (old)
# http://tangledhelix.com/blog/2012/07/16/tmux-and-mouse-mode/
# bind-key m \
#   set-option -g mode-mouse on \;\
#   set-option -g mouse-resize-pane on \;\
#   set-option -g mouse-select-pane on \;\
#   set-option -g mouse-select-window on \;\
#   display-message 'Mouse: ON'
# bind-key M \
#   set-option -g mode-mouse off \;\
#   set-option -g mouse-resize-pane off \;\
#   set-option -g mouse-select-pane off \;\
#   set-option -g mouse-select-window off \;\
#   display-message 'Mouse: OFF'

# enable PageUp/Down as copy mode
# if in ncurses app (vim,nano ..etc) then functions as normal
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
# bind-key -T copy-mode-vi PPage page-up
# bind-key -T copy-mode-vi NPage page-down

# bind-key -t vi-copy PPage page-up
# bind-key -t vi-copy NPage page-down

# bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
# bind-key -t vi-copy WheelUpPane halfpage-up
# bind-key -t vi-copy WheelDownPane halfpage-down

# demo: https://www.youtube.com/watch?v=N0RL_J0LT9A
# source: https://github.com/wincent/wincent/blob/aa3a322e3a911dabe0ef398ebb1fd7c77209b8ac/roles/dotfiles/files/.tmux.conf
# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys` and `tmux
# list-keys -t vi-copy`.
# set -g mouse on

# Restore pre-2.1 behavior of scrolling with the scrollwheel in Vim, less, copy
# mode etc, otherwise entering copy mode if not already in it.
#
#   if in copy mode (pane_in_mode) || using the mouse already (mouse_any_flag)
#     pass through mouse events to current pane (send -Mt=)
#   elsif in alternate screen mode
#     send `Up` key
#   else
#     enter copy mode (-e exits if we scroll to the bottom)
#   end
#
bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'

# }}}

# Window options
setw -g mode-keys vi
setw -g monitor-activity on
setw -g aggressive-resize on

# history
set -g history-limit 10000
set -sg escape-time 0
# set display timelimit
set-option -g display-panes-time 2000
set-option -g display-time 1000
#set -sg repeat-time

# enable shell hotkeys C-left/C-right
# http://sigizmund.com/tmux-and-c-leftc-right/
set-window-option -g xterm-keys on

# vim keys in command prompt
set-option -g status-keys vi

# history size
set-option -g history-limit 20000

# kill window/pane without confirmation
# http://unix.stackexchange.com/a/30283
bind-key & kill-session
bind-key x kill-pane

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind-key Escape copy-mode			# default key: prefix [
bind-key k copy-mode			    # default key: prefix [
bind-key j copy-mode			    # default key: prefix [
bind-key p paste-buffer				# default key: prefix ] ; interactively clipboard history key: prefix =
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

# set the current tmux version (use this variable on if-shell commands)
# run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6- | tr -d '[A-Z][a-z]')" # remove alphabets e.g 2.9a ==> 2.9 only

# vim copy mode rebinds for (tmux 2.4+)
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
# https://github.com/tmux/tmux/issues/754#issuecomment-303156000
# https://stackoverflow.com/a/40902312
# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  'bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi V send-keys -X select-line; \
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  bind-key -T choice-mode-vi h send-keys -X tree-collapse ; \
  bind-key -T choice-mode-vi l send-keys -X tree-expand ; \
  bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; \
  bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"; \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"'

# use vim as copy mode
bind-key v capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "vim-copymode" '$SHELL -c "vim /tmp/tmux-buffer"'

bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"

# scoll down / up with mouse
bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'




set -ga terminal-overrides ",xterm-256color*:Tc"

# Border Style
set -g pane-border-style "fg=#444b6a"
set -g pane-active-border-style "fg=#444b6a"

# Message line
set -g message-style 'bg=colour235 fg=colour254'
## set -g message-style "fg=#1a1b26,bg=#ff7a93,bold" # orange

# Window status
# setw -g window-status-style 'bg=colour237 fg=colour247'
# setw -g window-status-current-style 'bg=colour239 fg=colour220'
# setw -g window-status-current-format ' #I:#W #{?window_zoomed_flag,(zoomed) ,}'

# Window Section
setw -g window-style "fg=#787c99"
setw -g window-active-style "fg=#a9b1d6"
setw -g window-status-separator ''
## setw -g window-status-format "#[fg=#414868,bg=#1f2335]"

# window status
# set -g status-style 'bg=#333333 fg=#5eacd3'
set -g status-style 'bg=#1f2335 fg=#5eacd3'
setw -g window-status-format ' #I:#W#{?#{>:#{window_panes},1},(#{window_panes}),} '
#================
# setw -g window-status-style 'bg=colour237 fg=colour247'
# setw -g window-status-style 'bg=#1f2335 fg=colour247' # OR
setw -g window-status-style 'bg=#1f2335 fg=colour247' # OR
#================
set -g window-status-current-format "\
#{?client_prefix,#[fg=#1a1b26]#[bg=#f7768e],\
#{?window_zoomed_flag,#[fg=#1a1b26]#[bg=#0db9d7],\
#{?pane_synchronized,#[fg=#1a1b26]#[bg=#b9f27c],\
#{?window_marked_flag,#[fg=#1a1b26]#[bg=#ff9e64],\
#[fg=#1a1b26]#[bg=#CCA6C9]}}}}"
#================
# bg=#CCA6C9 for pink backgound
# bg=#7aa2f7 for blue backgound
#================
setw -g window-status-current-style 'bg=#1f2335 fg=#7aa2f7'
setw -ga window-status-current-format "  #[bold]#I:#W  "

## Left Section
# set -g status-left "#[fg=#23262E,bg=#7aa2f7,bold] #S|#[fg=#7aa2f7,bg=#1f2335,nobold,nounderscore,noitalics]"
set -g status-left "#[fg=#7aa2f7,bg=#1f2335,bold] #S|#[fg=#7aa2f7,bg=#1f2335,nobold,nounderscore,noitalics]"

# set -g status-left "#[fg=#1a1b26,bg=#7aa2f7]"
# set -ga status-left "\
# #{?client_prefix,#[bg=#f7768e]  \uf794,\
# #{?window_zoomed_flag,#[bg=#0db9d7]  \uf793,\
# #{?pane_synchronized,#[bg=#b9f27c]  \uf46a,\
# #{?window_marked_flag,#[bg=#ff9e64]  \uf5c0,  \uf792}}}}  #[bg=#1a1b26] "

## Right Section
set -g status-right-length 150
setw -g status-right "\
#{?client_prefix,#[fg=#1a1b26]#[bg=#f7768e],\
#{?window_zoomed_flag,#[fg=#1a1b26]#[bg=#0db9d7],\
#{?pane_synchronized,#[fg=#1a1b26]#[bg=#b9f27c],\
#{?window_marked_flag,#[fg=#1a1b26]#[bg=#ff9e64],\
#[fg=#7aa2f7]#[bg=#1f2335]}}}}"
# setw -ga status-right " #{?#{==:#{pane_current_path},#{HOME}},#[bold]~,\uf74a #[bold]#{b:pane_current_path}},%d %b %R"
setw -ga status-right " #{?#{==:#{pane_current_path},#{HOME}},#[bold]~,\uf74a #[bold]#{b:pane_current_path}}"


